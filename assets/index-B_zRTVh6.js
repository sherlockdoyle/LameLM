var F=Object.defineProperty;var U=(i,e,n)=>e in i?F(i,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):i[e]=n;var v=(i,e,n)=>U(i,typeof e!="symbol"?e+"":e,n);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function n(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(t){if(t.ep)return;t.ep=!0;const r=n(t);fetch(t.href,r)}})();const N="modulepreload",$=function(i){return"/LameLM/"+i},R={},p=function(e,n,a){let t=Promise.resolve();if(n&&n.length>0){document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),o=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));t=Promise.all(n.map(s=>{if(s=$(s),s in R)return;R[s]=!0;const u=s.endsWith(".css"),m=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${s}"]${m}`))return;const d=document.createElement("link");if(d.rel=u?"stylesheet":N,u||(d.as="script",d.crossOrigin=""),d.href=s,o&&d.setAttribute("nonce",o),document.head.appendChild(d),u)return new Promise((b,L)=>{d.addEventListener("load",b),d.addEventListener("error",()=>L(new Error(`Unable to preload CSS for ${s}`)))})}))}return t.then(()=>e()).catch(r=>{const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=r,window.dispatchEvent(o),!o.defaultPrevented)throw r})};function l(i){return document.getElementById(i)}const D={"Periodic Elements":()=>p(()=>import("./element-Cau0t0hb.js"),[]),Countries:()=>p(()=>import("./country-BD85pGJq.js"),[]),"Scientific Names":()=>p(()=>import("./scientific-name-BYafK7fV.js"),[]),Medicines:()=>p(()=>import("./medicine-BQg5-wPj.js"),[]),Names:()=>p(()=>import("./name-Du8iGRu_.js"),[]),Celebrities:()=>p(()=>import("./celebrity-DBW6IIvR.js"),[]),Shakespeare:()=>p(()=>import("./shakespeare-CWQWN3UC.js"),[]),"Lorem Ipsum":()=>p(()=>import("./lorem-DWFp85cz.js"),[])},c=l("inputText"),j=l("uploadFile"),B=l("downloadUrl"),x=l("predefinedText"),K=l("simplifyText");function S(){x.value=""}j.addEventListener("click",()=>{S(),c.value="Reading file...";const i=document.createElement("input");i.type="file",i.addEventListener("change",e=>{var a;const n=(a=e.target.files)==null?void 0:a[0];if(n){const t=new FileReader;t.addEventListener("load",()=>{c.value=t.result}),t.readAsText(n)}}),i.click()});B.addEventListener("click",()=>{S(),c.value="Downloading file...";const i=prompt("Enter URL to download");i?fetch(i).then(e=>e.text()).then(e=>{c.value=e}).catch(e=>{c.value="Error: "+e}):c.value="Error: No URL provided"});for(const i in D){const e=document.createElement("option");e.value=i,e.textContent=i,x.appendChild(e)}x.addEventListener("change",()=>{x.value&&(c.value="Getting text...",D[x.value]().then(i=>{c.value=i.default}).catch(i=>{c.value="Error: "+i}))});K.addEventListener("click",()=>{S(),c.value=c.value.replace(/[^\w\s]/gi,"").toLowerCase()});function z(){return c.value||null}const q={timeout:0};function _(i,e,n){const a=Math.max(Math.round((n-e)/100),1e3);function t(r,o){const s=Math.min(r+a,n);i(r,s),s<n?requestIdleCallback(()=>t(s,o),q):o()}return new Promise(r=>requestIdleCallback(()=>t(e,r),q))}function O(i){const e=i.reduce((t,r)=>t+r);if(e===0)return Math.floor(Math.random()*i.length);const n=Math.random()*e;let a=0;for(let t=0;t<i.length;++t)if(a+=i[t],a>n)return t;return i.length-1}class G{constructor(e,n){v(this,"char2num",{});v(this,"num2char",[]);v(this,"inputSeq");v(this,"probabilityTable");v(this,"trained",!1);this.prefixLength=e;const a=new Set(n);for(const t of a)this.char2num[t]=this.num2char.length,this.num2char.push(t);this.inputSeq=this.string2nums(n),this.probabilityTable=new Float32Array(this.num2char.length**(e+1))}async train(e){let n=0;for(let t=0;t<this.prefixLength;++t)n=n*this.num2char.length+this.inputSeq[t];const a=this.num2char.length**this.prefixLength;await _((t,r)=>{for(let o=t;o<r;++o)n=n%a*this.num2char.length+this.inputSeq[o],this.probabilityTable[n]+=1;e(r/this.inputSeq.length*.5)},this.prefixLength,this.inputSeq.length),await _((t,r)=>{for(let o=t;o<r;++o){let s=0;for(let u=0;u<this.num2char.length;++u)s+=this.probabilityTable[o*this.num2char.length+u];if(s)for(let u=0;u<this.num2char.length;++u)this.probabilityTable[o*this.num2char.length+u]/=s}e(r/a*.5+.5)},0,a),e(1),this.trained=!0}get emptyProbsRatio(){return this.probabilityTable.filter(e=>e===0).length/this.probabilityTable.length}get emptyPrefixesRatio(){let e=0;const n=this.num2char.length**this.prefixLength;for(let a=0;a<n;++a)this.probabilityTable.slice(a*this.num2char.length,(a+1)*this.num2char.length).every(t=>t===0)&&++e;return e/n}string2nums(e){const n=new Uint32Array(e.length);for(let a=0;a<e.length;++a)n[a]=this.char2num[e[a]];return n}nums2string(e){return e.map(n=>this.num2char[n]).join("")}prefixIndex2string(e){const n=new Array(this.prefixLength);for(let a=this.prefixLength-1;a>=0;--a)n[a]=this.num2char[e%this.num2char.length],e=Math.floor(e/this.num2char.length);return n.join("")}getBestPrefix(){const e=Array(),n=Array(),a=this.num2char.length**this.prefixLength;for(let t=0;t<a;++t){let r=1;for(let o=0;o<this.num2char.length;++o)r*=this.probabilityTable[t*this.num2char.length+o]+1;r>1&&(e.push(r),n.push(t))}return this.prefixIndex2string(n[O(e)])}async generate(e,n,a,t,r,o){let s=0;for(let m=0;m<e.length;++m)s=s*this.num2char.length+this.char2num[e[m]];o(e);const u=this.num2char.length**this.prefixLength;await _((m,d)=>{const b=Array();for(let L=m;L<d;++L){let g=Array.from(this.probabilityTable.slice(s*this.num2char.length,(s+1)*this.num2char.length),(f,E)=>[f,E]);r&&(g=g.map(f=>[f[0]+1e-4,f[1]])),a&&(g=g.sort((f,E)=>E[0]-f[0]).slice(0,a));const C=g.map(f=>Math.pow(f[0],t)),A=g.map(f=>f[1])[O(C)];b.push(A),s=(s*this.num2char.length+A)%u}o(this.nums2string(b))},0,n)}}const T=l("prefixLength"),W=l("train"),M=l("trainingProgress"),V=l("stats");let h=null;W.addEventListener("click",async()=>{M.value=0,V.innerText="",T.value||(T.value="3");const i=parseInt(T.value),e=z();if(!e)return alert("Input text is required!");if(e.length<=i)return alert("Input text must be longer than prefix length!");h=new G(i,e),await h.train(n=>{M.value=n}),V.innerText=`Statistics: (${(h.emptyProbsRatio*100).toFixed(2)}%, ${(h.emptyPrefixesRatio*100).toFixed(2)}%)`});const y=l("startSequence"),X=l("autoStartSequence"),P=l("contentLength"),w=l("topK"),I=l("probabilityPower"),H=l("looseMode"),J=l("generate"),k=l("output");X.addEventListener("click",()=>{if(!(h!=null&&h.trained))return alert("Train the model first!");do y.value=h.getBestPrefix();while(y.value.length!==h.prefixLength)});J.addEventListener("click",()=>{if(!(h!=null&&h.trained))return alert("Train the model first!");if(!y.value)return alert("Start sequence is required!");if(y.value.length!==h.prefixLength)return alert("Start sequence should have as many characters as the prefix length!");P.value||(P.value="500"),w.value||(w.value="0"),I.value||(I.value="1");const i=Math.max(parseInt(P.value),1),e=Math.max(parseInt(w.value),0),n=parseFloat(I.value);k.innerText="",h.generate(y.value,i,e,n,H.checked,a=>{k.innerText+=a})});
